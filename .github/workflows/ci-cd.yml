name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/student-portal-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/student-portal-frontend

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    # Backend Build and Test
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Build Backend
      run: ./mvnw clean package -DskipTests
    
    # Frontend Build and Test
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: student-portal-frontend/package-lock.json
    
    - name: Build Frontend
      run: |
        npm ci
        npm run build

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    # Backend Docker Build
    - name: Build and Push Backend Image
      uses: docker/build-push-action@v4
      with:
        context: ./student-portal-backend
        file: ./student-portal-backend/Dockerfile
        push: true
        tags: |
          ${{ env.BACKEND_IMAGE }}:latest
          ${{ env.BACKEND_IMAGE }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache,mode=max
    
    # Frontend Docker Build
    - name: Build and Push Frontend Image
      uses: docker/build-push-action@v4
      with:
        context: ./student-portal-frontend
        file: ./student-portal-frontend/Dockerfile
        push: true
        tags: |
          ${{ env.FRONTEND_IMAGE }}:latest
          ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache,mode=max

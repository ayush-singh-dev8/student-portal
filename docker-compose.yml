services:
  postgres:
    image: postgres:latest
    container_name: student_portal_db
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - student-portal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: ayushtech123/student-portal-backend:latest
    container_name: student_portal_backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      SPRING_JPA_SHOW_SQL: 'true'
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: 'true'
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_SQL_INIT_MODE: always
      SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: 'true'
    networks:
      - student-portal-network

  frontend:
    image: ayushtech123/student-portal-frontend:latest
    container_name: student_portal_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    networks:
      - student-portal-network

networks:
  student-portal-network:
    driver: bridge

volumes:
  postgres_data: